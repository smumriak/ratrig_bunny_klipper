[stepper_x]
position_min: -4.6
position_max: 208
position_endstop: -4.6
homing_retract_dist: 0
homing_speed: 50

[stepper_y]
position_min: -5
position_max: 202
position_endstop: -5
homing_retract_dist: 0
homing_speed: 50

[stepper_z]
position_min: -5
position_max: 200
homing_speed: 10

[probe]
x_offset: -28.1
y_offset: -13.7
speed: 5
samples: 3
sample_retract_dist: 2
lift_speed: 5.0
samples_result: median
samples_tolerance: 0.02
samples_tolerance_retries: 5

# [gcode_macro RatOS]
# variable_homing: "sensorless"
# variable_sensorless_x_current: 0.6
# variable_sensorless_y_current: 0.6

[safe_z_home]
home_xy_position: 129.8, 114.2 # (208.0 - 4.6) / 2.0 + 28.1, (204.0 - 3.0) / 2.0 + 13.7
# z_hop: 25

[z_tilt]
z_positions:
	-2.5, -3.3
	101.6, 205
	205.9, -3.3

points:
	65.6, 40.4
	130.85, 160.131
	196.1, 40.4
		
horizontal_move_z: 20
retries: 10
retry_tolerance: 0.005

[bed_mesh]
horizontal_move_z: 5
mesh_min: 10, 10
mesh_max: 190, 190
probe_count: 9,9
fade_start: 1.0
fade_end: 10.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: .2

# fallback module in python because I have no mental capacity to deal with the type idiocracy
[bunny_homing_module]
axes: xyz
z_hop: 15
z_hop_speed: 15
travel_speed: 300
z_travel_speed: 15
sensorless_x_current: 0.6
sensorless_y_current: 0.6
gcode:
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer.toolhead.axis_maximum.x / 2 %}
	{% set safe_home_y = printer.toolhead.axis_maximum.y / 2 %}
	{% set travel_speed = printer.configfile.config.bunny_homing_module.travel_speed|float * 60 %}
	{% set z_travel_speed = printer.configfile.config.bunny_homing_module.z_travel_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.bunny_homing_module.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.bunny_homing_module.z_hop_speed|float * 60 %}

	M400
	G90

	{% if params.X is defined or (params.Y is not defined and params.Z is not defined) %}
		RESPOND MSG="Homing X"
		HOME_X_SENSORLESS
		{% set x_homed = True %}
		G0 X{safe_home_x} F{travel_speed}
		M400
	{% endif %}

	{% if params.Y is defined or (params.X is not defined and params.Z is not defined) %}
		RESPOND MSG="Homing Y"
		HOME_Y_SENSORLESS
		{% set y_homed = True %}
		G0 Y{safe_home_y} F{travel_speed}
		M400
	{% endif %}

	{% if params.Z is defined or (params.X is not defined and params.Y is not defined) %}
		RESPOND MSG="Homing Z"
		{% if x_homed == False or y_homed == False %}
			M118 X and Y must be homed before homing Z
			{ action_emergency_stop("X and Y must be homed before homing Z") }
		{% else %}
			G0 X{safe_home_x} Y{safe_home_y} F{travel_speed}
			G28 Z
			G0 Z{z_hop} F{z_hop_speed}
		{% endif %}
	{% endif %}

[gcode_macro HOME_X_SENSORLESS]
gcode:
	M204 S1000 # set homing acceleration
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config.bunny_homing_module.sensorless_x_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config.bunny_homing_module.sensorless_x_current}
	G4 P300 # give drivers time to apply current
	G28 X
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	G4 P300 # give drivers time to apply current
	M204 S{printer.configfile.config.printer.max_accel} # set acceleration back

[gcode_macro HOME_Y_SENSORLESS]
gcode:
	M204 S1000 # set homing acceleration
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config.bunny_homing_module.sensorless_y_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config.bunny_homing_module.sensorless_y_current}
	G4 P300 # give drivers time to apply current
	G28 Y
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current}
	G4 P300 # give drivers time to apply current
	M204 S{printer.configfile.config.printer.max_accel} # set acceleration back
